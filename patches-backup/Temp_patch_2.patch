Subject: [PATCH] Temp patch 2
---
Index: src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java b/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java
--- a/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java	(revision b7310c35b9970f906ee9c254645d3eed2f756c15)
+++ b/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java	(revision e01ae9871ea68eb2cfcef44bfd52e09347d34f32)
@@ -1,24 +1,38 @@
 package de.verdox.mccreativelab.data;
 
+import com.google.common.collect.ImmutableSet;
+import io.papermc.paper.adventure.PaperAdventure;
 import net.kyori.adventure.sound.Sound;
+import net.minecraft.core.Holder;
 import net.minecraft.core.Registry;
 import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.core.registries.Registries;
+import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.sounds.SoundEvent;
 import net.minecraft.world.entity.ai.attributes.RangedAttribute;
 import net.minecraft.world.entity.ai.memory.MemoryModuleType;
+import net.minecraft.world.entity.ai.village.poi.PoiTypes;
 import net.minecraft.world.entity.npc.VillagerProfession;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.level.block.Block;
 import org.bukkit.Material;
 import org.bukkit.NamespacedKey;
 import org.bukkit.PoiType;
 import org.bukkit.attribute.Attribute;
 import org.bukkit.block.data.BlockData;
+import org.bukkit.craftbukkit.CraftPoiType;
+import org.bukkit.craftbukkit.block.data.CraftBlockData;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
 import org.bukkit.entity.Villager;
 import org.bukkit.entity.memory.MemoryKey;
 
+import javax.annotation.Nullable;
 import java.util.Optional;
 import java.util.Set;
 import java.util.function.Predicate;
+import java.util.stream.Collectors;
 
 public class CraftVanillaRegistryManipulator implements VanillaRegistryManipulator {
     @Override
@@ -38,11 +52,29 @@
 
     @Override
     public RegistryEntryReference<PoiType> createPoiType(NamespacedKey namespacedKey, Set<BlockData> states, int ticketCount, int searchDistance) {
-        return null;
+
+        ResourceKey<net.minecraft.world.entity.ai.village.poi.PoiType> resourceKey = ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, CraftNamespacedKey.toMinecraft(namespacedKey));
+
+        PoiTypes.register(BuiltInRegistries.POINT_OF_INTEREST_TYPE, resourceKey, states.stream()
+                                                                                       .map(blockData -> ((CraftBlockData) blockData).getState())
+                                                                                       .collect(Collectors.toSet()), ticketCount, searchDistance);
+
+        return new RegistryEntryReference<>(namespacedKey, () -> PoiType.getPoiType(namespacedKey));
     }
 
     @Override
     public RegistryEntryReference<Villager.Profession> createProfession(NamespacedKey namespacedKey, Predicate<PoiType> heldWorkStation, Predicate<PoiType> acquirableWorkstation, Set<Material> gatherableItems, Set<Material> secondaryJobSites, Sound.Type workSound) {
-        return null;
+
+        Predicate<Holder<net.minecraft.world.entity.ai.village.poi.PoiType>> heldWorkstationNms = poiTypeHolder -> heldWorkStation.test(CraftPoiType.minecraftToBukkit(poiTypeHolder.value()));
+        Predicate<Holder<net.minecraft.world.entity.ai.village.poi.PoiType>> acquirableWorkstationNms = poiTypeHolder -> acquirableWorkstation.test(CraftPoiType.minecraftToBukkit(poiTypeHolder.value()));
+        ImmutableSet<Item> items = ImmutableSet.copyOf(gatherableItems.stream().map(CraftMagicNumbers::getItem)
+                                                                      .collect(Collectors.toSet()));
+        ImmutableSet<Block> jobBlocks = ImmutableSet.copyOf(secondaryJobSites.stream().map(CraftMagicNumbers::getBlock)
+                                                                             .collect(Collectors.toSet()));
+        @Nullable SoundEvent soundEvent = workSound == null ? null : BuiltInRegistries.SOUND_EVENT.get(PaperAdventure.asVanilla(workSound.key()));
+
+        VillagerProfession villagerProfession = new VillagerProfession(namespacedKey.getKey(), heldWorkstationNms, acquirableWorkstationNms, items, jobBlocks, soundEvent);
+        Registry.register(BuiltInRegistries.VILLAGER_PROFESSION, CraftNamespacedKey.toMinecraft(namespacedKey), villagerProfession);
+        return new RegistryEntryReference<>(namespacedKey, () -> Villager.Profession.getProfession(namespacedKey));
     }
 }
Index: src/main/java/net/minecraft/world/entity/ai/village/poi/PoiTypes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiTypes.java b/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiTypes.java
--- a/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiTypes.java	(revision b7310c35b9970f906ee9c254645d3eed2f756c15)
+++ b/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiTypes.java	(revision e01ae9871ea68eb2cfcef44bfd52e09347d34f32)
@@ -58,7 +58,7 @@
         return ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, new ResourceLocation(id));
     }
 
-    private static PoiType register(Registry<PoiType> registry, ResourceKey<PoiType> key, Set<BlockState> states, int ticketCount, int searchDistance) {
+    public static PoiType register(Registry<PoiType> registry, ResourceKey<PoiType> key, Set<BlockState> states, int ticketCount, int searchDistance) {
         PoiType poiType = new PoiType(states, ticketCount, searchDistance);
         Registry.register(registry, key, poiType);
         registerBlockStates(registry.getHolderOrThrow(key), states);
Index: src/main/java/net/minecraft/world/entity/npc/VillagerProfession.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/minecraft/world/entity/npc/VillagerProfession.java b/src/main/java/net/minecraft/world/entity/npc/VillagerProfession.java
--- a/src/main/java/net/minecraft/world/entity/npc/VillagerProfession.java	(revision b7310c35b9970f906ee9c254645d3eed2f756c15)
+++ b/src/main/java/net/minecraft/world/entity/npc/VillagerProfession.java	(revision e01ae9871ea68eb2cfcef44bfd52e09347d34f32)
@@ -63,7 +63,7 @@
         }, gatherableItems, secondaryJobSites, workSound);
     }
 
-    private static VillagerProfession register(String id, Predicate<Holder<PoiType>> heldWorkstation, Predicate<Holder<PoiType>> acquirableWorkstation, ImmutableSet<Item> gatherableItems, ImmutableSet<Block> secondaryJobSites, @Nullable SoundEvent workSound) {
+    public static VillagerProfession register(String id, Predicate<Holder<PoiType>> heldWorkstation, Predicate<Holder<PoiType>> acquirableWorkstation, ImmutableSet<Item> gatherableItems, ImmutableSet<Block> secondaryJobSites, @Nullable SoundEvent workSound) {
         return Registry.register(BuiltInRegistries.VILLAGER_PROFESSION, new ResourceLocation(id), new VillagerProfession(id, heldWorkstation, acquirableWorkstation, gatherableItems, secondaryJobSites, workSound));
     }
 }

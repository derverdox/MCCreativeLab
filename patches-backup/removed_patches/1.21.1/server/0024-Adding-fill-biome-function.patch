From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Thu, 21 Mar 2024 17:56:54 +0100
Subject: [PATCH] Adding fill biome function


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 2b1d30452ca4868da3a90360632f1b2b2f59980d..2c3ed36679b4c451a00b929e2d31e0d1fb9f37a4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -1076,6 +1076,56 @@ public class CraftWorld extends CraftRegionAccessor implements World {
         }
     }
 
+    @Override
+    public void fillBiome(Block from, Block to, Biome biomeToFill, Predicate<Biome> biomeReplacePredicate) {
+        ServerLevel serverLevel = ((CraftWorld) from.getWorld()).getHandle();
+        net.minecraft.server.commands.FillBiomeCommand.fill(
+            serverLevel,
+            new BlockPos(from.getX(), from.getY(), from.getZ()),
+            new BlockPos(to.getX(), to.getY(), to.getZ()),
+            CraftBiome.bukkitToMinecraftHolder(biomeToFill),
+            biomeHolder -> biomeReplacePredicate.test(CraftBiome.minecraftHolderToBukkit(biomeHolder)),
+            componentSupplier -> {}
+        );
+    }
+
+    @Override
+    public void fillBiome(Block from, Block to, java.util.function.Function<@NotNull Biome, @Nullable Biome> replacer) {
+        net.minecraft.world.level.levelgen.structure.BoundingBox boundingBox = net.minecraft.world.level.levelgen.structure.BoundingBox.fromCorners(new BlockPos(from.getX(), from.getY(), from.getZ()), new BlockPos(to.getX(), to.getY(), to.getZ()));
+        List<ChunkAccess> list = new ArrayList<>();
+
+        for(int k = net.minecraft.core.SectionPos.blockToSectionCoord(boundingBox.minZ()); k <= net.minecraft.core.SectionPos.blockToSectionCoord(boundingBox.maxZ()); ++k) {
+            for(int l = net.minecraft.core.SectionPos.blockToSectionCoord(boundingBox.minX()); l <= net.minecraft.core.SectionPos.blockToSectionCoord(boundingBox.maxX()); ++l) {
+                ChunkAccess chunkAccess = world.getChunk(l, k, ChunkStatus.FULL, false);
+                if (chunkAccess == null)
+                    continue;
+
+                list.add(chunkAccess);
+            }
+        }
+
+        for(ChunkAccess chunk : list) {
+            net.minecraft.world.level.biome.BiomeResolver biomeResolver = (x, y, z, noise) -> {
+                int blockX = net.minecraft.core.QuartPos.toBlock(x);
+                int blockY = net.minecraft.core.QuartPos.toBlock(y);
+                int blockZ = net.minecraft.core.QuartPos.toBlock(z);
+                Holder<net.minecraft.world.level.biome.Biome> actualBiome = chunk.getNoiseBiome(x, y, z);
+
+                if(boundingBox.isInside(blockX, blockY, blockZ)){
+                    Biome biomeToReplaceWith = replacer.apply(CraftBiome.minecraftHolderToBukkit(actualBiome));
+                    if(biomeToReplaceWith != null)
+                        return CraftBiome.bukkitToMinecraftHolder(biomeToReplaceWith);
+                }
+
+                return actualBiome;
+            };
+            chunk.fillBiomesFromNoise(biomeResolver, world.getChunkSource().randomState().sampler());
+            chunk.setUnsaved(true);
+        }
+
+        world.getChunkSource().chunkMap.resendBiomesForChunks(list);
+    }
+
     @Override
     public void setBiome(int x, int y, int z, Holder<net.minecraft.world.level.biome.Biome> bb) {
         BlockPos pos = new BlockPos(x, 0, z);

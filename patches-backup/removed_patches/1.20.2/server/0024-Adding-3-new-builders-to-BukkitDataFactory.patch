From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <lukasjonsson@outlook.de>
Date: Mon, 27 Nov 2023 19:11:43 +0100
Subject: [PATCH] Adding 3 new builders to BukkitDataFactory


diff --git a/src/main/java/org/bukkit/craftbukkit/datafactory/CraftDataFactory.java b/src/main/java/org/bukkit/craftbukkit/datafactory/CraftDataFactory.java
index 9769c9bb1244bbd188460be93091d02d4ed0508d..ad3561efcb7f2ca0c36bc1b89facd1b6273709ed 100644
--- a/src/main/java/org/bukkit/craftbukkit/datafactory/CraftDataFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/datafactory/CraftDataFactory.java
@@ -7,4 +7,18 @@ import org.bukkit.datafactory.builder.AttributeBuilder;
 import org.bukkit.datafactory.builder.VillagerProfessionBuilder;
 
 public class CraftDataFactory implements BukkitDataFactory {
+    @Override
+    public AttributeBuilder attributeBuilder() {
+        return new CraftAttributeBuilder();
+    }
+
+    @Override
+    public VillagerProfessionBuilder villagerProfessionBuilder() {
+        return new CraftVillagerProfessionBuilder();
+    }
+
+    @Override
+    public PoiTypeBuilder poiTypeBuilder() {
+        return new CraftPoiTypeBuilder();
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftAttributeBuilder.java b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftAttributeBuilder.java
new file mode 100644
index 0000000000000000000000000000000000000000..944854c9973e0b30fbe32c8858daf044c8c48d59
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftAttributeBuilder.java
@@ -0,0 +1,52 @@
+package org.bukkit.craftbukkit.datafactory.builder;
+
+import net.minecraft.core.Registry;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.world.entity.ai.attributes.RangedAttribute;
+import org.bukkit.NamespacedKey;
+import org.bukkit.attribute.Attribute;
+import org.bukkit.craftbukkit.attribute.CraftAttribute;
+import org.bukkit.craftbukkit.datafactory.CraftElementBuilder;
+import org.bukkit.datafactory.builder.AttributeBuilder;
+import org.bukkit.enchantments.Enchantment;
+
+public class CraftAttributeBuilder extends CraftElementBuilder<Attribute, net.minecraft.world.entity.ai.attributes.Attribute> implements AttributeBuilder {
+    private double maxValue = 1;
+    private double defaultValue = 0;
+    private double minValue = 0;
+    private RangedAttribute rangedAttribute;
+
+    @Override
+    public Attribute build(NamespacedKey namespacedKey) {
+        rangedAttribute = new RangedAttribute("attribute.name."+namespacedKey.getKey(), defaultValue, minValue, maxValue);
+        return new CraftAttribute(namespacedKey, rangedAttribute);
+    }
+
+    @Override
+    public net.minecraft.world.entity.ai.attributes.Attribute getHandle() {
+        return rangedAttribute;
+    }
+
+    @Override
+    public Registry<net.minecraft.world.entity.ai.attributes.Attribute> getNMSRegistry() {
+        return BuiltInRegistries.ATTRIBUTE;
+    }
+
+    @Override
+    public AttributeBuilder withDefaultValue(double defaultValue) {
+        this.defaultValue = defaultValue;
+        return this;
+    }
+
+    @Override
+    public AttributeBuilder withMinValue(double minValue) {
+        this.minValue = minValue;
+        return this;
+    }
+
+    @Override
+    public AttributeBuilder withMaxValue(double maxValue) {
+        this.maxValue = maxValue;
+        return this;
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftPoiTypeBuilder.java b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftPoiTypeBuilder.java
new file mode 100644
index 0000000000000000000000000000000000000000..7dc750352e3c0a275c9944921db283781ccb5675
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftPoiTypeBuilder.java
@@ -0,0 +1,61 @@
+package org.bukkit.craftbukkit.datafactory.builder;
+
+import net.minecraft.core.Registry;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.NamespacedKey;
+import org.bukkit.PoiType;
+import org.bukkit.block.data.BlockData;
+import org.bukkit.craftbukkit.CraftPoiType;
+import org.bukkit.craftbukkit.block.data.CraftBlockData;
+import org.bukkit.craftbukkit.datafactory.CraftElementBuilder;
+import org.bukkit.datafactory.builder.PoiTypeBuilder;
+
+import java.util.Set;
+import java.util.stream.Collectors;
+
+public class CraftPoiTypeBuilder extends CraftElementBuilder<PoiType, net.minecraft.world.entity.ai.village.poi.PoiType> implements PoiTypeBuilder {
+    private Set<BlockData> blockDataSet;
+    private int maxTickets;
+    private int validRange;
+    private net.minecraft.world.entity.ai.village.poi.PoiType handle;
+
+    @Override
+    public PoiType build(NamespacedKey namespacedKey) {
+
+        Set<BlockState> matchingStates = blockDataSet.stream()
+                                                     .map(blockData -> ((CraftBlockData) blockData))
+                                                     .map(CraftBlockData::getState).collect(Collectors.toSet());
+
+        handle = new net.minecraft.world.entity.ai.village.poi.PoiType(matchingStates, maxTickets, validRange);
+        return new CraftPoiType(namespacedKey, handle);
+    }
+
+    @Override
+    public PoiTypeBuilder withMatchingStates(Set<BlockData> blockDataSet) {
+        this.blockDataSet = blockDataSet;
+        return this;
+    }
+
+    @Override
+    public PoiTypeBuilder withMaxTickets(int maxTickets) {
+        this.maxTickets = maxTickets;
+        return this;
+    }
+
+    @Override
+    public PoiTypeBuilder withValidRange(int validRange) {
+        this.validRange = validRange;
+        return this;
+    }
+
+    @Override
+    public net.minecraft.world.entity.ai.village.poi.PoiType getHandle() {
+        return handle;
+    }
+
+    @Override
+    public Registry<net.minecraft.world.entity.ai.village.poi.PoiType> getNMSRegistry() {
+        return BuiltInRegistries.POINT_OF_INTEREST_TYPE;
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftVillagerProfessionBuilder.java b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftVillagerProfessionBuilder.java
new file mode 100644
index 0000000000000000000000000000000000000000..e924e299e8b15ce21c01494f566800898962da41
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/datafactory/builder/CraftVillagerProfessionBuilder.java
@@ -0,0 +1,83 @@
+package org.bukkit.craftbukkit.datafactory.builder;
+
+import com.google.common.collect.ImmutableSet;
+import net.minecraft.core.Registry;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.core.registries.Registries;
+import net.minecraft.resources.ResourceKey;
+import net.minecraft.sounds.SoundEvent;
+import net.minecraft.world.entity.ai.village.poi.PoiType;
+import net.minecraft.world.entity.npc.VillagerProfession;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.level.block.Block;
+import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.bukkit.Sound;
+import org.bukkit.craftbukkit.datafactory.CraftElementBuilder;
+import org.bukkit.craftbukkit.entity.CraftVillager;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
+import org.bukkit.craftbukkit.util.CraftNamespacedKey;
+import org.bukkit.datafactory.builder.VillagerProfessionBuilder;
+import org.bukkit.entity.Villager;
+
+import java.util.Set;
+import java.util.stream.Collectors;
+
+public class CraftVillagerProfessionBuilder extends CraftElementBuilder<Villager.Profession, VillagerProfession> implements VillagerProfessionBuilder {
+    private org.bukkit.PoiType heldJobSite;
+    private org.bukkit.PoiType acquirableJobSite;
+    private Set<Material> requestedItems;
+    private Set<Material> secondaryPois;
+    private Sound sound;
+    private VillagerProfession handle;
+    @Override
+    public Villager.Profession build(NamespacedKey namespacedKey) {
+        ResourceKey<PoiType> heldJobSiteKey = ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, CraftNamespacedKey.toMinecraft(heldJobSite.getKey()));
+        ResourceKey<PoiType> acquirableJobSiteKey = ResourceKey.create(Registries.POINT_OF_INTEREST_TYPE, CraftNamespacedKey.toMinecraft(acquirableJobSite.getKey()));
+        ImmutableSet<Item> requestedItemSet = ImmutableSet.copyOf(requestedItems.stream().map(CraftMagicNumbers::getItem).collect(Collectors.toSet()));
+        ImmutableSet<Block> secondaryPoiSet = ImmutableSet.copyOf(secondaryPois.stream().map(CraftMagicNumbers::getBlock).collect(Collectors.toSet()));
+        SoundEvent soundEvent = BuiltInRegistries.SOUND_EVENT.get(ResourceKey.create(Registries.SOUND_EVENT, CraftNamespacedKey.toMinecraft(sound.getKey())));
+        handle = new VillagerProfession(namespacedKey.getKey(), poiTypeHolder -> poiTypeHolder.is(heldJobSiteKey), poiTypeHolder -> poiTypeHolder.is(acquirableJobSiteKey), requestedItemSet, secondaryPoiSet, soundEvent);
+        return new CraftVillager.CraftProfession(namespacedKey, handle);
+    }
+
+    @Override
+    public VillagerProfession getHandle() {
+        return handle;
+    }
+
+    @Override
+    public Registry<VillagerProfession> getNMSRegistry() {
+        return BuiltInRegistries.VILLAGER_PROFESSION;
+    }
+
+    @Override
+    public VillagerProfessionBuilder withHeldJobSite(org.bukkit.PoiType heldJobSite) {
+        this.heldJobSite = heldJobSite;
+        return this;
+    }
+
+    @Override
+    public VillagerProfessionBuilder withAcquirableJobSite(org.bukkit.PoiType acquirableJobSite) {
+        this.acquirableJobSite = acquirableJobSite;
+        return this;
+    }
+
+    @Override
+    public VillagerProfessionBuilder withRequestedItems(Set<Material> requestedItems) {
+        this.requestedItems = requestedItems;
+        return this;
+    }
+
+    @Override
+    public VillagerProfessionBuilder withSecondaryPoi(Set<Material> secondaryPois) {
+        this.secondaryPois = secondaryPois;
+        return this;
+    }
+
+    @Override
+    public VillagerProfessionBuilder withWorkSound(Sound sound) {
+        this.sound = sound;
+        return this;
+    }
+}

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Sat, 20 Jan 2024 16:51:51 +0100
Subject: [PATCH] Add VanillaRegistryManipulator


diff --git a/src/main/java/de/verdox/mccreativelab/CreativeLab.java b/src/main/java/de/verdox/mccreativelab/CreativeLab.java
index 62be6439d32bbe65697cb5137b3e968ede48d531..f7f6f30e99a78e456aed0be0aeb6d86ee62ae855 100644
--- a/src/main/java/de/verdox/mccreativelab/CreativeLab.java
+++ b/src/main/java/de/verdox/mccreativelab/CreativeLab.java
@@ -2,4 +2,5 @@ package de.verdox.mccreativelab;
 
 public interface CreativeLab {
     de.verdox.mccreativelab.data.DataPackInterceptor getDataPackInterceptor();
+    de.verdox.mccreativelab.data.VanillaRegistryManipulator getRegistryManipulator();
 }
diff --git a/src/main/java/de/verdox/mccreativelab/MCCreativeLab.java b/src/main/java/de/verdox/mccreativelab/MCCreativeLab.java
index c05dcd3dd219d2ab33f7e38f267ad0316083119e..1fd9786c6e3635ef6c0a2e5cde08d700ec79a43f 100644
--- a/src/main/java/de/verdox/mccreativelab/MCCreativeLab.java
+++ b/src/main/java/de/verdox/mccreativelab/MCCreativeLab.java
@@ -11,4 +11,8 @@ public final class MCCreativeLab{
     public static de.verdox.mccreativelab.data.DataPackInterceptor getDataPackInterceptor(){
         return creativeLab.getDataPackInterceptor();
     }
+
+    public static de.verdox.mccreativelab.data.VanillaRegistryManipulator getRegistryManipulator(){
+        return creativeLab.getRegistryManipulator();
+    }
 }
diff --git a/src/main/java/de/verdox/mccreativelab/data/VanillaRegistryManipulator.java b/src/main/java/de/verdox/mccreativelab/data/VanillaRegistryManipulator.java
new file mode 100644
index 0000000000000000000000000000000000000000..1b64832eb00fd86238179e38271a72ab3b0814e8
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/data/VanillaRegistryManipulator.java
@@ -0,0 +1,26 @@
+package de.verdox.mccreativelab.data;
+
+import net.kyori.adventure.sound.Sound;
+import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.bukkit.PoiType;
+import org.bukkit.attribute.Attribute;
+import org.bukkit.block.data.BlockData;
+import org.bukkit.entity.Villager;
+import org.bukkit.entity.memory.MemoryKey;
+
+import java.util.Set;
+import java.util.function.Predicate;
+import java.util.function.Supplier;
+
+public interface VanillaRegistryManipulator {
+    RegistryEntryReference<Attribute> createAttribute(NamespacedKey namespacedKey, double defaultValue, double min, double max);
+
+    <T> RegistryEntryReference<MemoryKey<T>> createMemoryKey(NamespacedKey namespacedKey, Class<? extends T> storedType);
+
+    RegistryEntryReference<PoiType> createPoiType(NamespacedKey namespacedKey, Set<BlockData> states, int ticketCount, int searchDistance);
+
+    RegistryEntryReference<Villager.Profession> createProfession(NamespacedKey namespacedKey, Predicate<PoiType> heldWorkStation, Predicate<PoiType> acquirableWorkstation, Set<Material> gatherableItems, Set<Material> secondaryJobSites, Sound.Type workSound);
+
+    record RegistryEntryReference<T>(NamespacedKey namespacedKey, Supplier<T> dataSupplier){}
+}

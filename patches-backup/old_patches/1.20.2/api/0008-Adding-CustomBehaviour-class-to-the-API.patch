From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <lukasjonsson@outlook.de>
Date: Fri, 17 Nov 2023 18:49:50 +0100
Subject: [PATCH] Adding CustomBehaviour class to the API


diff --git a/src/main/java/de/verdox/mccreativelab/CustomBehaviour.java b/src/main/java/de/verdox/mccreativelab/CustomBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..2f9981a67d72f575fb2ac37b8b6c2bde4d0733ed
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/CustomBehaviour.java
@@ -0,0 +1,49 @@
+package de.verdox.mccreativelab;
+
+import org.bukkit.Bukkit;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.Objects;
+
+/**
+ * Used as wrapper class for custom implemented behaviour.
+ * This is normally used to change constants in the minecraft gameplay.
+ * @param <T>
+ */
+public class CustomBehaviour<T> {
+    private T behaviour;
+    private final String key;
+    public CustomBehaviour(String key){
+        this.key = key;
+    }
+
+    public String getKey() {
+        return key;
+    }
+
+    /**
+     * Used to set a new behaviour.
+     * @param behaviour The new implementation
+     */
+    public void setBehaviour(@NotNull T behaviour) {
+        Bukkit.getLogger().info(key+": Using implementation "+behaviour.getClass().getSimpleName());
+        Objects.requireNonNull(behaviour);
+        this.behaviour = behaviour;
+    }
+
+    @Nullable
+    @ApiStatus.Internal
+    public T getBehaviour() {
+        return behaviour;
+    }
+
+    /**
+     * Checks if a custom implementation exists
+     * @return true if a custom implementation exists
+     */
+    public boolean isImplemented(){
+        return behaviour != null;
+    }
+}

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <lukasjonsson@outlook.de>
Date: Sun, 12 Nov 2023 13:37:22 +0100
Subject: [PATCH] Implementing Async Events for Chunk Creation, Saving,
 Loading. These Events occur on the respective async chunk thread.


diff --git a/src/main/java/de/verdox/mccreativelab/events/ChunkDataCreateEvent.java b/src/main/java/de/verdox/mccreativelab/events/ChunkDataCreateEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..578988593db6689ef98d53da2accc553a720d3b1
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/events/ChunkDataCreateEvent.java
@@ -0,0 +1,21 @@
+package de.verdox.mccreativelab.events;
+
+import org.bukkit.Chunk;
+import org.bukkit.World;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class ChunkDataCreateEvent extends ChunkDataEvent {
+    private final Chunk chunk;
+
+    public ChunkDataCreateEvent(@NotNull World world, @Nullable Chunk chunk, @NotNull ChunkDataEvent.ChunkPos chunkPos, @NotNull PersistentDataContainer persistentDataContainer) {
+        super(world, chunk, chunkPos, persistentDataContainer);
+        this.chunk = chunk;
+    }
+
+    @NotNull
+    public Chunk getChunk() {
+        return this.chunk;
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/events/ChunkDataEvent.java b/src/main/java/de/verdox/mccreativelab/events/ChunkDataEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..11ade060418a9997fc9376a5518ad38628d4fd9d
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/events/ChunkDataEvent.java
@@ -0,0 +1,64 @@
+package de.verdox.mccreativelab.events;
+
+import org.bukkit.Bukkit;
+import org.bukkit.Chunk;
+import org.bukkit.World;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public abstract class ChunkDataEvent extends Event {
+    private static final HandlerList handlers = new HandlerList();
+
+    private final World world;
+
+    private final Chunk chunk;
+
+    private final ChunkPos chunkPos;
+
+    private final PersistentDataContainer persistentDataContainer;
+
+    public ChunkDataEvent(@NotNull World world, @Nullable Chunk chunk, @NotNull ChunkPos chunkPos, @NotNull PersistentDataContainer persistentDataContainer) {
+        super(!Bukkit.isPrimaryThread());
+        this.world = world;
+        this.chunk = chunk;
+        this.chunkPos = chunkPos;
+        this.persistentDataContainer = persistentDataContainer;
+    }
+
+    @NotNull
+    public ChunkPos getChunkPos() {
+        return this.chunkPos;
+    }
+
+    @Nullable
+    public Chunk getChunk() {
+        return this.chunk;
+    }
+
+    @NotNull
+    public World getWorld() {
+        return this.world;
+    }
+
+    @NotNull
+    public PersistentDataContainer getPersistentDataContainer() {
+        return this.persistentDataContainer;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public record ChunkPos(int x, int z) {
+
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/events/ChunkDataLoadEvent.java b/src/main/java/de/verdox/mccreativelab/events/ChunkDataLoadEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..763d32aba1a36e0cc839b9757d54acc185644348
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/events/ChunkDataLoadEvent.java
@@ -0,0 +1,13 @@
+package de.verdox.mccreativelab.events;
+
+import org.bukkit.Chunk;
+import org.bukkit.World;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class ChunkDataLoadEvent extends ChunkDataEvent {
+    public ChunkDataLoadEvent(@NotNull World world, @Nullable Chunk chunk, @NotNull ChunkDataEvent.ChunkPos chunkPos, @NotNull PersistentDataContainer persistentDataContainer) {
+        super(world, chunk, chunkPos, persistentDataContainer);
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/events/ChunkDataSaveEvent.java b/src/main/java/de/verdox/mccreativelab/events/ChunkDataSaveEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..65adb34f43b7e77b87fe146ab0ec7bae9132beff
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/events/ChunkDataSaveEvent.java
@@ -0,0 +1,20 @@
+package de.verdox.mccreativelab.events;
+
+import org.bukkit.Chunk;
+import org.bukkit.World;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class ChunkDataSaveEvent extends ChunkDataEvent {
+    private final boolean unloaded;
+
+    public ChunkDataSaveEvent(@NotNull World world, @Nullable Chunk chunk, @NotNull ChunkDataEvent.ChunkPos chunkPos, @NotNull PersistentDataContainer persistentDataContainer, boolean unloaded) {
+        super(world, chunk, chunkPos, persistentDataContainer);
+        this.unloaded = unloaded;
+    }
+
+    public boolean isUnloaded() {
+        return this.unloaded;
+    }
+}
